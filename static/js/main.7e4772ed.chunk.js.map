{"version":3,"sources":["api.ts","context/WeatherContext.tsx","components/Header/Header.tsx","utils.ts","components/WeatherCard/WeatherCard.tsx","components/Chart/Chart.tsx","components/App.tsx","components/Loader/Loader.tsx","index.tsx"],"names":["API_KEY","getCityData","city","axios","then","res","data","getCityWeather","unit","lat","lon","getData","undefined","cityData","length","alert","weatherData","initialState","loading","init","handleSubmit","handleCityChange","handleUnitChange","WeatherContext","createContext","WeatherProvider","children","useState","setCity","setCityData","setWeatherData","type","symbol","setUnit","setLoading","name","e","preventDefault","Provider","value","target","options","selectedIndex","text","Form","styled","form","Label","div","Input","input","Select","select","Option","option","Button","button","Header","useContext","useEffect","onSubmit","placeholder","onChange","defaultValue","convertDate","id","daily","dt","Date","toLocaleDateString","weekday","day","month","year","getWeatherIcon","process","Card","CardHeader","TemperatureContainer","DayTemperature","h1","Description","MaxMinContainer","MaxMinData","WeatherCard","country","temp","toFixed","src","alt","width","height","max","min","weather","description","ReactECharts","style","settings","theme","chartRef","useRef","Defaultoption","tooltip","trigger","axisPointer","xAxis","yAxis","series","itemStyle","color","chart","resizeChart","resize","current","window","addEventListener","dispose","removeEventListener","map","date","getDay","getDate","dateFromDT","formatter","params","getInstanceByDom","setOption","showLoading","hideLoading","H5","ref","AppContainer","CardContainer","App","PrevArrow","currentSlide","slideCount","props","NextArrow","slickSettings","lazyLoad","accessibility","draggable","slidesToShow","slidesToScroll","infinite","centerMode","prevArrow","nextArrow","itemsNumber","allCards","index","push","renderItems","spin","keyframes","LoaderContainer","SpinningLoader","Loader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e4772ed.chunk.js","sourcesContent":["import axios, {AxiosResponse} from \"axios\";\nimport { City, Weather } from \"./types\";\n\nconst API_KEY = '762385c71cb82e47ad4fdd68f06f6271';\n\nexport const getCityData = async (city: string): Promise<City[]> => {\n  return axios(\n    `https://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=5&appid=${API_KEY}`\n  ).then((res:AxiosResponse) => { \n      return res.data; \n  });\n};\n\nexport const getCityWeather = async (\n  city: City,\n  unit: string\n): Promise<Weather> => {\n  const lat = city.lat;\n  const lon = city.lon;\n\n  return axios(\n    `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=${unit}&exclude=alerts,minutely,current&appid=${API_KEY}`\n  ).then((res:AxiosResponse) => {\n      return res.data; \n  });\n};\n\nexport const getData = async (city: string, unit: string) => {\n  const cityData = await getCityData(city);\n  if (cityData === undefined || cityData.length === 0) {\n    alert(\"City data not found.\");\n    return;\n  }\n  const weatherData = await getCityWeather(cityData[0], unit);\n  if (weatherData === undefined) {\n    alert(\"Weather data not found.\");\n    return;\n  }\n  return { cityData, weatherData };\n};\n","import React, { createContext, useState, ReactNode } from \"react\";\nimport { City, Unit, Weather } from \"../types\";\nimport { getData } from \"../api\";\n\ninterface Context {\n  cityData: City | null;\n  weatherData: Weather | null;\n  loading: boolean;\n  init: () => void;\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n  handleCityChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  handleUnitChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n\n}\n\nconst initialState = {\n  cityData: null,\n  weatherData: null,\n  loading: false,\n  init: () => {},\n  handleSubmit: () => {},\n  handleCityChange: () => {},\n  handleUnitChange: () => {}, \n};\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const WeatherContext = createContext<Context>(initialState);\n\nexport const WeatherProvider = ({ children }: Props) => {\n  const [city, setCity] = useState(\"\");\n  const [cityData, setCityData] = useState<City | null>(null);\n  const [weatherData, setWeatherData] = useState<Weather | null>(null);\n  const [unit, setUnit] = useState<Unit>({ type: \"metric\", symbol: \"°C\" });\n  const [loading, setLoading] = useState(false);\n   \n\n  const init = async ()=>{\n    setLoading(true);\n    const data = await getData('tunisia', unit.type);\n    if (data !== undefined) {  \n      setCityData(data.cityData[0]);\n      setCity(data.cityData[0].name)\n      setWeatherData({ ...data.weatherData, unit: unit });\n    }\n    setLoading(false);\n  }\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoading(true);\n    const data = await getData(city, unit.type);\n    if (data !== undefined) { \n      setCityData(data.cityData[0]);\n      setWeatherData({ ...data.weatherData, unit: unit });\n    }\n    setLoading(false);\n  };\n\n  const handleCityChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCity(e.target.value);\n  };\n\n  const handleUnitChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const type = e.target.value;\n    const symbol = e.target.options[e.target.selectedIndex].text;\n    setUnit({ type: type, symbol: symbol });\n  };\n\n  return (\n    <WeatherContext.Provider\n      value={{\n        cityData,\n        weatherData,\n        loading,\n        handleSubmit,\n        handleCityChange,\n        handleUnitChange,\n        init,\n      }}\n    >\n      {children}\n    </WeatherContext.Provider>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { WeatherContext } from \"../../context/WeatherContext\";\nimport styled from \"styled-components\";\nimport { Loader } from \"..\";\n\nconst Header = () => {\n\n\n  const { handleSubmit, handleCityChange, handleUnitChange,init, loading } =\n    useContext(WeatherContext);\n\n  useEffect(()=>{\n    init()\n  }, [])\n \n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>City Name: </Label>\n        <Input\n          type=\"text\"\n          name=\"city\"\n          placeholder=\"City\"\n          onChange={(e) => handleCityChange(e)}\n          defaultValue={'Tunisia'}\n        />\n     \n\n      <Select name=\"unit\" onChange={(e) => handleUnitChange(e)}>\n        <Option value=\"metric\">°C</Option>\n        <Option value=\"imperial\">°F</Option>\n        <Option value=\"standard\"> K</Option>\n      </Select>\n      <Button type=\"submit\">Search</Button>\n      {loading ? <Loader /> : null}\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 20vh;\n  margin-top: 30px;\n`;\n\nconst Label = styled.div`\n  font-size: 25px; \n  color: #5be8f3;\n`;\n\nconst Input = styled.input`\n  font-size: 18px;\n  padding: 10px;\n  margin: 10px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.4);\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.3);\n  transition: 0.2s ease-in-out;\n  &:focus {\n    background-color: rgba(255, 255, 255, 0.6);\n  }\n`;\n\nconst Select = styled.select`\n  font-size: 18px;\n  padding: 9px 5px;\n  height: 41px;\n  border: none;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.4);\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.3);\n  transition: 0.2s ease-in-out;\n  cursor: pointer;\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.6);\n  }\n`;\n\nconst Option = styled.option`\n  border: none;\n  border-radius: 5px;\n  background-color: rgba(70, 130, 240, 0.4);\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.3);\n`;\n\nconst Button = styled.button`\n  font-size: 18px;\n  padding: 10px 15px;\n  margin: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.4);\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.3);\n  transition: 0.2s ease-in-out;\n  cursor: pointer;\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.6);\n  }\n`;\n\nexport default Header;\n","import { Weather } from \"./types\";\n\nexport const convertDate = (id: number, weatherData: Weather) => {\n  if (weatherData !== undefined && weatherData.daily?.[id].dt) {\n    const date = new Date(weatherData.daily[id].dt * 1000);\n    return date.toLocaleDateString(\"en-GB\", {\n      weekday: \"short\",\n      day: \"numeric\",\n      month: \"numeric\",\n      year: \"numeric\",\n    });\n  }\n};\n\nexport const dateFromDT =  (dt:number) => { \n  // this function convert it to days for echarts Fromat\n  let days = ['Sun','Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  let date = new Date(dt * 1000);  \n  return days[date.getDay()] + \" \" + date.getDate()\n}\n\n\n// SOURCE https://openweathermap.org/weather-conditions\nexport const getWeatherIcon = (id: number) => {\n  if (id >= 200 && id <= 232) {\n    return `${process.env.PUBLIC_URL}/icons/weather/thunder.png`;\n  }\n  if (id >= 300 && id <= 321) {\n    return `${process.env.PUBLIC_URL}/icons/weather/moderate-rain.png`;\n  }\n  if (id === 500) {\n    return `${process.env.PUBLIC_URL}/icons/weather/light-rain.png`;\n  }\n  if (id === 501) {\n    return `${process.env.PUBLIC_URL}/icons/weather/moderate-rain.png`;\n  }\n  if (id === 511) {\n    return `${process.env.PUBLIC_URL}/icons/weather/freezing-rain.png`;\n  }\n  if ((id >= 502 && id <= 504) || (id >= 520 && id <= 531)) {\n    return `${process.env.PUBLIC_URL}/icons/weather/heavy-rain.png`;\n  }\n  if (id === 600 || id === 615) {\n    return `${process.env.PUBLIC_URL}/icons/weather/light-snow.png`;\n  }\n  if (id === 601 || id === 616) {\n    return `${process.env.PUBLIC_URL}/icons/weather/moderate-snow.png`;\n  }\n  if (id === 602 || (id >= 620 && id <= 622)) {\n    return `${process.env.PUBLIC_URL}/icons/weather/heavy-snow.png`;\n  }\n  if (id >= 611 && id <= 613) {\n    return `${process.env.PUBLIC_URL}/icons/weather/freezing-rain.png`;\n  }\n  if (id >= 701 && id <= 781) {\n    return `${process.env.PUBLIC_URL}/icons/weather/mist.png`;\n  }\n  if (id === 800) {\n    return `${process.env.PUBLIC_URL}/icons/weather/sun.png`;\n  }\n  if (id >= 801 && id <= 802) {\n    return `${process.env.PUBLIC_URL}/icons/weather/cloud-sun.png`;\n  }\n  if (id >= 803 && id <= 804) {\n    return `${process.env.PUBLIC_URL}/icons/weather/clouds.png`;\n  }\n};\n","import React, { useContext } from \"react\";\nimport { WeatherContext } from \"../../context/WeatherContext\";\nimport { convertDate, getWeatherIcon } from \"../../utils\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  id: number;\n}\n\nconst WeatherCard = ({ id }: Props) => {\n  const { cityData, weatherData } = useContext(WeatherContext);\n\n  return (\n    <>\n      {cityData && weatherData ? (\n        <Card>\n          <CardHeader>\n            <h1>\n              {cityData.name}, {cityData.country}\n            </h1>\n            <h3>{convertDate(id, weatherData)}</h3> \n          <TemperatureContainer>\n            <DayTemperature>\n              {weatherData.daily[id].temp.day.toFixed(1)}\n              {weatherData.unit.symbol}\n            </DayTemperature>\n            <MaxMinContainer>\n              <img src={`${process.env.PUBLIC_URL}/icons/arrows.png`} alt=\"arrows\" width=\"32\" height=\"32\" />\n              <MaxMinData>\n                <p>\n                  {weatherData.daily[id].temp.max.toFixed(1)}\n                  {weatherData.unit.symbol}\n                </p>\n                <p>\n                  {weatherData.daily[id].temp.min.toFixed(1)}\n                  {weatherData.unit.symbol}\n                </p>\n              </MaxMinData>\n            </MaxMinContainer>\n          </TemperatureContainer>\n          <Description>\n            <h2>{weatherData.daily[id].weather[0].description}</h2>\n          </Description>\n          </CardHeader>\n\n          <img\n              src={getWeatherIcon(weatherData.daily[id].weather[0].id)}\n              width=\"100\"\n              height=\"100\"\n              alt=\"\"\n            />\n\n        </Card>\n      ) : null}\n    </>\n  );\n};\n\nconst Card = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  height: 300px;\n  padding: 20px;\n  margin: 20px;\n  border-radius: 5px;\n  color : black;\n  box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.6);\n  transition: 0.2s ease-in-out;\n  &:hover {\n    background-color: rgba(46, 222, 240, 0.75);\n    cursor: pointer;\n    transform: scale(1.05);\n  }\n`;\nconst CardHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`\n\n\n\nconst TemperatureContainer = styled.div`\n  margin-top: auto;\n  margin-bottom: 10px;\n  display: flex;\n`;\n\nconst DayTemperature = styled.h1`\nfont-size: 50px;\n`;\n\nconst Description = styled.div`\nmargin-top: auto;\n`;\n\nconst MaxMinContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  align-items: center;\n  justify-content: center;\n  img {\n    justify-self: end;\n  }\n`;\n\nconst MaxMinData = styled.div`\n  justify-self: start;\n  p {\n    font-size: 18px;\n  }\n`;\n\nexport default WeatherCard;\n","import { useRef, useEffect,useContext } from \"react\";\r\nimport { init, getInstanceByDom  } from \"echarts\";\r\nimport type { CSSProperties } from \"react\";\r\nimport { dateFromDT } from \"../../utils\";\r\nimport { WeatherContext } from \"../../context/WeatherContext\";\r\nimport type { EChartsOption, ECharts, SetOptionOpts } from \"echarts\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport interface ReactEChartsProps {\r\n  option?: EChartsOption;\r\n  style?: CSSProperties;\r\n  settings?: SetOptionOpts;\r\n  loading?: boolean;\r\n  theme?: \"light\" | \"dark\";\r\n}\r\n  \r\nexport function ReactECharts({\r\n  option,\r\n  style,\r\n  settings,\r\n  loading,\r\n  theme,\r\n}: ReactEChartsProps): JSX.Element {\r\n  const chartRef = useRef<HTMLDivElement>(null);\r\n\r\n  const { weatherData } = useContext(WeatherContext);\r\n  \r\n  let Defaultoption: any = { \r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n           type: 'shadow',\r\n      }  \r\n      },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: []\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    }  , \r\n    series: [\r\n      {\r\n        data: [],\r\n        itemStyle: {  color :'#2de2f0c7'},\r\n        type: 'bar'\r\n      }\r\n    ]\r\n  };\r\n \r\n  useEffect(() => {\r\n    // Initialize chart\r\n    let chart: ECharts | undefined;\r\n    if (chartRef.current !== null) {\r\n      chart = init(chartRef.current, theme);\r\n    } \r\n    // Add chart resize listener \r\n    function resizeChart() {\r\n      chart?.resize();\r\n    }\r\n    window.addEventListener(\"resize\", resizeChart);\r\n\r\n    // Return cleanup function\r\n    return () => {\r\n      chart?.dispose();\r\n      window.removeEventListener(\"resize\", resizeChart);\r\n    };\r\n  }, [theme]);\r\n\r\n  useEffect(() => {\r\n    // Update chart\r\n    if (chartRef.current !== null && weatherData ) {  \r\n      Defaultoption.series[0].data = weatherData.daily.map(e =>  e.temp.day )  \r\n      Defaultoption.xAxis.data =  weatherData.daily.map(e => dateFromDT(e.dt) )  \r\n      Defaultoption.tooltip.formatter = (params:any) => ( params[0].data + \" \" + weatherData.unit.symbol); \r\n      const chart = getInstanceByDom(chartRef.current);\r\n      chart && chart.setOption(Defaultoption, settings);\r\n    }\r\n  }, [option, settings, weatherData]); // Whenever theme changes we need to add option and setting due to it being deleted in cleanup function\r\n\r\n  useEffect(() => {\r\n    // Update chart\r\n    if (chartRef.current !== null) {\r\n      const chart = getInstanceByDom(chartRef.current); \r\n      if (chart)\r\n      loading === true ? chart.showLoading() : chart.hideLoading();\r\n    }\r\n  }, [loading, theme]);\r\n\r\n  return (<div>\r\n   <H5>Prévision de la semaine</H5>\r\n   <div ref={chartRef} style={{ width: \"100%\", height: \"350px\", ...style }} />\r\n   </div>\r\n  );\r\n} \r\n\r\nconst H5 = styled.form`\r\n  text-align : center;\r\n  color : black; \r\n  margin-top : 50px;\r\n  font-weight : bold;\r\n`;","import { Header, WeatherCard , Chart } from \".\";\nimport { WeatherProvider } from \"../context/WeatherContext\"; \nimport Slick, { Settings ,CustomArrowProps } from \"react-slick\"; \nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";  \nimport styled from \"styled-components\";\n\n \nfunction App() {  \n\n  // Slick Arrows Need To Know CurrentSlide And Slide Count or else you get Console error\n  \n  // Wrapping Slick Buttons\n  const PrevArrow = ({currentSlide, slideCount, ...props}: CustomArrowProps) => ( \n        <img src={`${process.env.PUBLIC_URL}/icons/prev.png`} alt=\"prev\" {...props} /> \n    );\n\n  // Wrapping Slick Buttons\n  const NextArrow = ({currentSlide, slideCount, ...props}: CustomArrowProps) => ( \n    <img src={`${process.env.PUBLIC_URL}/icons/next.png`} alt=\"next\" {...props} /> \n  );\n\n let slickSettings: Settings = {\n    lazyLoad: \"ondemand\",\n    accessibility: false,\n    draggable: true,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    infinite: true,    \n    centerMode: true,\n    prevArrow:  <PrevArrow /> ,\n    nextArrow:  <NextArrow /> ,\n  };\n\n  const renderItems = (itemsNumber : number )=> {\n    let allCards = []\n    for (let index = 0; index < itemsNumber; index++) {\n      allCards.push(<WeatherCard key={index} id={index} />) \n    }\n    return allCards\n  }\n  return ( \n    <AppContainer> \n      <WeatherProvider>\n        <Header />\n        <CardContainer> \n        <Slick {...slickSettings}>  \n          {renderItems(5)}\n        </Slick>  \n        </CardContainer> \n        <Chart  />\n      </WeatherProvider> \n    </AppContainer>\n  );\n}\n\nconst AppContainer = styled.div`\n  position: relative;\n`;\n   \nconst CardContainer = styled.div` \n  margin: 20px;\n`;\n \nexport default App;\n","import styled, { keyframes } from \"styled-components\";\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <SpinningLoader />\n    </LoaderContainer>\n  );\n}; \n\nconst spin = keyframes`\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10px;\n`;\n\nconst SpinningLoader = styled.div`\n  content: \"\";\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  border-top: 2px solid rgba(20, 30, 50, 1);\n  border-right: 2px solid transparent;\n  animation: ${spin} 0.8s linear infinite;\n`;\n\nexport default Loader;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}